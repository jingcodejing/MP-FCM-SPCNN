close all;
clear all;
clc;
I = imread('E:\论文\PCNN\图片\对比\2\1.1.jpg');

subplot(121),imshow(I);
title('原始图像');

% 函数fft2()用于计算二维傅立叶变换
% 函数fftshift()是对函数fft2()作傅里叶变换后得到的频谱进行平移,将变换后的图像频谱中心从矩阵的原点移到矩阵的中心
% 作二维傅里叶变换前一定要用函数im2double()把原始图像的数据类型由uint8转化为double类型
% 否则会因为unit8数据类型只能表示0-255的整数而出现数据截断,进而出现错误结果
s=[1.0000    0.9055    0.8246    0.7616    0.7211    0.7071    0.7211    0.7616    0.8246    0.9055    1.0000
    0.9055    0.8000    0.7071    0.6324    0.5831    0.5657    0.5831    0.6324    0.7071    0.8000    0.9055
    0.8246    0.7071    0.6000    0.5099    0.4472    0.4243    0.4472    0.5099    0.6000    0.7071    0.8246
    0.7616    0.6324    0.5099    0.4000    0.3162    0.2828    0.3162    0.4000    0.5099    0.6324    0.7616
    0.7211    0.5831    0.4472    0.3162    0.2000    0.1414    0.2000    0.3162    0.4472    0.5831    0.7211
    0.7071    0.5657    0.4243    0.2828    0.1414         0    0.1414    0.2828    0.4243    0.5657    0.7071
    0.7211    0.5831    0.4472    0.3162    0.2000    0.1414    0.2000    0.3162    0.4472    0.5831    0.7211
    0.7616    0.6324    0.5099    0.4000    0.3162    0.2828    0.3162    0.4000    0.5099    0.6324    0.7616
    0.8246    0.7071    0.6000    0.5099    0.4472    0.4243    0.4472    0.5099    0.6000    0.7071    0.8246
    0.9055    0.8000    0.7071    0.6324    0.5831    0.5657    0.5831    0.6324    0.7071    0.8000    0.9055
    1.0000    0.9055    0.8246    0.7616    0.7211    0.7071    0.7211    0.7616    0.8246    0.9055    1.0000]
% s=fftshift(fft2(im2double(I)));
[a,b]=size(s);
a0=round(a/2);
b0=round(b/2);
d0=50; % 将理想高通滤波器的截止频率D0设置为50

s=real(ifft2(ifftshift(s)));% 最后进行二维傅里叶反变换转换为时域图像
subplot(122),imshow(s,[]);
title('理想高通滤波所得图像');
